// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum ROLE {
  USER
  ADMIN
}

enum SCHOOL_ROLE {
  OWNER
  STAFF
}

enum PAYMENT_STATUS {
  PENDING
  SUCCESSFUL
}

enum TOKEN_TYPE {
  REFRESH_TOKEN
  CHANGE_PASSWORD
  RESET_PASSWORD
  VERIFY_EMAIL
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  first_name     String?
  last_name      String?
  mobile         String?
  address        String?
  state          String?
  country        String?
  password       String?
  role           ROLE
  email          String    @unique
  email_verified DateTime?
  created_at     DateTime? @default(now())
  updated_at     DateTime? @default(now())
  Staff          Staff[]
  Tokens         Token[]
}

model Invite {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  school_id  String      @db.ObjectId
  email      String
  token      String
  role       SCHOOL_ROLE
  invited_at DateTime?   @default(now())
  school     School      @relation(fields: [school_id], references: [id])
}

model Token {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  user_Id    String     @db.ObjectId
  type       TOKEN_TYPE
  token      String
  created_at DateTime?  @default(now())
  expire_at  DateTime

  user User @relation(fields: [user_Id], references: [id])
}

model School {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  address           String
  current_session   String?   @db.ObjectId
  available_slots   Int       @default(0)
  all_session_slots Int       @default(0)
  all_time_slots    Int       @default(0)
  active            Boolean   @default(true) 
  created_at        DateTime? @default(now())
  updated_at        DateTime? @default(now())
  staffs            Staff[]
  invites           Invite[]
  classes           Class[]
  sessions          Session[]
  payments          Payment[]
}

model Class {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  colour_code Int?
  school_id   String    @db.ObjectId
  created_at  DateTime? @default(now())
  updated_at  DateTime? @default(now())
  school      School    @relation(fields: [school_id], references: [id])
}

model Staff {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  school_id  String      @db.ObjectId
  user_Id    String      @db.ObjectId
  role       SCHOOL_ROLE
  title      String?
  created_at DateTime?   @default(now())
  updated_at DateTime?   @default(now())

  user   User   @relation(fields: [user_Id], references: [id])
  school School @relation(fields: [school_id], references: [id])
}

model Session {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  total_students Int
  paid_students  Int?      @default(0)
  school_id      String    @db.ObjectId
  created_at     DateTime? @default(now())
  updated_at     DateTime? @default(now())
  school         School    @relation(fields: [school_id], references: [id])
  payments       Payment[]
}

model Payment {
  id         String         @id @default(auto()) @map("_id") @db.ObjectId
  slots      Int
  amount     String
  payer_name String
  status     PAYMENT_STATUS @default(PENDING)
  session_id String         @db.ObjectId
  school_id  String         @db.ObjectId
  created_at DateTime?      @default(now())
  approved_at DateTime?      
  school     School         @relation(fields: [school_id], references: [id])
  session    Session        @relation(fields: [session_id], references: [id])
}

model Account {
  id               String         @id @default(auto()) @map("_id") @db.ObjectId
  bank             String
  account_name     String
  account_number   String
}

model Site {
  id               String       @id @default(auto()) @map("_id") @db.ObjectId
  price            Float       @default(0.0)
  email            String       @default("admin@cloudreport.com")
  email_password   String       @default("password")
}
