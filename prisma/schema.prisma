// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum ROLE {
  USER
  ADMIN
}

enum SCHOOL_ROLE {
  OWNER
  STAFF
}

enum TOKEN_TYPE {
  REFRESH_TOKEN
  VERIFY_EMAIL
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  first_name     String?
  last_name      String?
  mobile         String?
  address        String?
  state          String?
  country        String?
  password       String
  role           ROLE
  email          String   @unique
  email_verified DateTime?
  created_at     DateTime? @default(now())
  updated_at     DateTime? @default(now())
  Staff          Staff[]
  Tokens         Token[]
}


model Token {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  user_Id    String      @db.ObjectId
  type       TOKEN_TYPE
  token      String
  created_at DateTime?   @default(now())
  expire_at  DateTime   

  user   User   @relation(fields: [user_Id], references: [id])
}

model School {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  available_slots   Int
  all_session_slots Int
  all_time_slots    Int
  created_at        DateTime? @default(now())
  updated_at        DateTime? @default(now())
  staffs            Staff[]
}

model Staff {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  school_id  String      @db.ObjectId
  user_Id    String      @db.ObjectId
  role       SCHOOL_ROLE
  title      String?
  created_at DateTime?   @default(now())
  updated_at DateTime?   @default(now())

  user   User   @relation(fields: [user_Id], references: [id])
  school School @relation(fields: [school_id], references: [id])
}
